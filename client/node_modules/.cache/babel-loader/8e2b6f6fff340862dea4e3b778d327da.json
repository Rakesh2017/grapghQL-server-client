{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rakesh/langara/Term 4/react-apollo-graphql-wmdd-4999-sept-2020/rakesh/client/src/components/cardList.js\";\nimport Paragraph from 'antd/lib/skeleton/Paragraph';\nimport React, { useState } from 'react';\n\nconst CardList = ({\n  id,\n  name,\n  food,\n  type,\n  characterstic,\n  legs\n}) => {\n  const styles = getStyles();\n\n  const Paragraph = ({\n    value\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: styles.textBold,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  };\n\n  const Title = ({\n    value\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: styles.colorGrey,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr 1fr'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        value: \"id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Paragraph, {\n        value: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        value: \"food:  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Paragraph, {\n        value: food\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        value: \"type:  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Paragraph, {\n        value: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        value: \"legs:  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Paragraph, {\n        value: legs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        value: \"characterstics:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Paragraph, {\n        value: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CardList;\n\nconst getStyles = () => ({\n  textBold: {\n    fontWeight: \"bold\"\n  },\n  colorGrey: {\n    color: 'grey'\n  }\n});\n\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/rakesh/langara/Term 4/react-apollo-graphql-wmdd-4999-sept-2020/rakesh/client/src/components/cardList.js"],"names":["Paragraph","React","useState","CardList","id","name","food","type","characterstic","legs","styles","getStyles","value","textBold","Title","colorGrey","display","gridTemplateColumns","width","fontWeight","color"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA,aAAxB;AAAuCC,EAAAA;AAAvC,CAAD,KAAmD;AAEhE,QAAMC,MAAM,GAAGC,SAAS,EAAxB;;AAEA,QAAMX,SAAS,GAAG,CAAC;AAAEY,IAAAA;AAAF,GAAD,KAAe;AAC7B,wBAAO;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA,gBAAgCD;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAIA,QAAME,KAAK,GAAG,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAe;AACzB,wBAAO;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACK,SAApB;AAAA,gBAAiCH;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA,gBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,mBAAmB,EAAE;AAAxC,OAAZ;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,oBAC4B,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEb;AAAlB;AAAA;AAAA;AAAA;AAAA,cAD5B,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAFJ,oBAEgC,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFhC,eAGI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAHJ,oBAGgC,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHhC,eAII,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAJJ,oBAIgC,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,cAJhC,eAKI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cALJ,oBAKwC,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA,cALxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAI,MAAA,KAAK,EAAE;AAACc,QAAAA,KAAK,EAAC;AAAP;AAAX;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAzBD;;KAAMf,Q;;AA2BN,MAAMQ,SAAS,GAAG,OAAO;AACrBE,EAAAA,QAAQ,EAAE;AACNM,IAAAA,UAAU,EAAE;AADN,GADW;AAIrBJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,KAAK,EAAE;AADA;AAJU,CAAP,CAAlB;;AAUA,eAAejB,QAAf","sourcesContent":["import Paragraph from 'antd/lib/skeleton/Paragraph'\nimport React, { useState } from 'react'\n\nconst CardList = ({ id, name, food, type, characterstic, legs }) => {\n\n    const styles = getStyles();\n\n    const Paragraph = ({ value }) => {\n        return <span style={styles.textBold} >{value}</span>\n    }\n\n    const Title = ({ value }) => {\n        return <span style={styles.colorGrey} >{value}</span>\n    }\n\n    return (\n        <div>\n            <h2>{name}</h2>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr' }}>\n                <Title value={\"id:\"} /> <Paragraph value={id} />\n                <Title value={\"food:  \"} /> <Paragraph value={food} />\n                <Title value={\"type:  \"} /> <Paragraph value={type} />\n                <Title value={\"legs:  \"} /> <Paragraph value={legs} />\n                <Title value={\"characterstics:\"} /> <Paragraph value={id} />\n            </div>\n            <hr style={{width:'100%'}}></hr>\n        </div>\n    )\n}\n\nconst getStyles = () => ({\n    textBold: {\n        fontWeight: \"bold\"\n    },\n    colorGrey: {\n        color: 'grey'\n    }\n})\n\n\nexport default CardList"]},"metadata":{},"sourceType":"module"}