{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rakesh/langara/Term 4/react-apollo-graphql-wmdd-4999-sept-2020/rakesh/client/src/components/list.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GET_ANIMALS } from '../graphql/queries';\nimport CardList from './cardList';\nimport { useQuery } from '@apollo/client';\n\nconst AnimalList = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ANIMALS);\n  if (loading) return 'Loading...';else if (error) return `Error! ${error.message}`;\n  console.log(data); // <CardList id={item.id} name={\"name\"} food={\"food\"} type={\"type\"} characterstic={\"charaat\"} legs={\"legs\"} />\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      gridGap: '10px'\n    },\n    children: data.Animals.map(item => {\n      return /*#__PURE__*/_jsxDEV(CardList, {\n        id: item.id,\n        name: item.name,\n        food: item.food,\n        type: item.type,\n        characterstic: item.properties.type,\n        legs: item.properties.legs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnimalList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = AnimalList;\nexport default AnimalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimalList\");","map":{"version":3,"sources":["/Users/rakesh/langara/Term 4/react-apollo-graphql-wmdd-4999-sept-2020/rakesh/client/src/components/list.js"],"names":["React","GET_ANIMALS","CardList","useQuery","AnimalList","loading","error","data","message","console","log","display","gridTemplateColumns","gridGap","Animals","map","item","id","name","food","type","properties","legs"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,QAAQ,CAACF,WAAD,CAAzC;AAEA,MAAII,OAAJ,EAAa,OAAO,YAAP,CAAb,KACK,IAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EANqB,CAOrB;;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,mBAAmB,EAAE,KAAxC;AAA+CC,MAAAA,OAAO,EAAE;AAAxD,KAAZ;AAAA,cAEQN,IAAI,CAACO,OAAL,CAAaC,GAAb,CAAiBC,IAAI,IAAI;AACrB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEA,IAAI,CAACC,EAAnB;AAAuB,QAAA,IAAI,EAAED,IAAI,CAACE,IAAlC;AAAwC,QAAA,IAAI,EAAEF,IAAI,CAACG,IAAnD;AAAyD,QAAA,IAAI,EAAEH,IAAI,CAACI,IAApE;AAA0E,QAAA,aAAa,EAAEJ,IAAI,CAACK,UAAL,CAAgBD,IAAzG;AAA+G,QAAA,IAAI,EAAEJ,IAAI,CAACK,UAAL,CAAgBC;AAArI;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlBD;;GAAMlB,U;UAE+BD,Q;;;KAF/BC,U;AAoBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { GET_ANIMALS } from '../graphql/queries'\nimport CardList from './cardList'\nimport { useQuery } from '@apollo/client';\n\nconst AnimalList = () => {\n\n    const { loading, error, data } = useQuery(GET_ANIMALS)\n\n    if (loading) return 'Loading...'\n    else if (error) return `Error! ${error.message}`\n    console.log(data)\n    // <CardList id={item.id} name={\"name\"} food={\"food\"} type={\"type\"} characterstic={\"charaat\"} legs={\"legs\"} />\n\n    return (\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr', gridGap: '10px' }}>\n            {\n                data.Animals.map(item => {\n                    return <CardList id={item.id} name={item.name} food={item.food} type={item.type} characterstic={item.properties.type} legs={item.properties.legs} />\n                })\n            }\n        </div>\n    )\n}\n\nexport default AnimalList"]},"metadata":{},"sourceType":"module"}