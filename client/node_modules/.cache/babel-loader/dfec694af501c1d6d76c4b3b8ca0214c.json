{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rakesh/langara/Term 4/react-apollo-graphql-wmdd-4999-sept-2020/rakesh/client/src/components/list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { GET_ANIMALS } from '../graphql/queries';\nimport CardList from './cardList';\nimport { useQuery } from '@apollo/client';\nimport Header from './header';\n\nconst AnimalList = () => {\n  _s();\n\n  const [edited, setEdited] = useState(0);\n  const [info, setInfo] = useState([]); // useEffect(() => {\n  //     setEdited(2)\n  // }, [edited])\n\n  useEffect(() => {}, [info, edited]);\n\n  function handle(value) {\n    console.log('im clicked');\n    setEdited(5);\n  }\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ANIMALS);\n  if (loading) return 'Loading...';else if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => setEdited(6),\n      style: {\n        width: '100%',\n        marginTop: '10px'\n      },\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: edited != 0 ? console.log('true') : console.log('false')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      callback: handle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnimalList, \"MkOQFqpThxvyH0NkpQck83m1NCE=\", false, function () {\n  return [useQuery];\n});\n\n_c = AnimalList;\nexport default AnimalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimalList\");","map":{"version":3,"sources":["/Users/rakesh/langara/Term 4/react-apollo-graphql-wmdd-4999-sept-2020/rakesh/client/src/components/list.js"],"names":["React","useEffect","useState","GET_ANIMALS","CardList","useQuery","Header","AnimalList","edited","setEdited","info","setInfo","handle","value","console","log","loading","error","data","message","event","width","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAHqB,CAKrB;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACS,IAAD,EAAOF,MAAP,CAFM,CAAT;;AAIA,WAASI,MAAT,CAAgBC,KAAhB,EAAuB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAN,IAAAA,SAAS,CAAC,CAAD,CAAT;AACH;;AAED,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACF,WAAD,CAAzC;AACA,MAAIa,OAAJ,EAAa,OAAO,YAAP,CAAb,KACK,IAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEhB,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAGC,KAAD,IAAWX,SAAS,CAAC,CAAD,CAArC;AAA0C,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBAAId,MAAM,IAAI,CAAV,GAAcM,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAd,GAAoCD,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAxC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAxCD;;GAAML,U;UAkB+BF,Q;;;KAlB/BE,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { GET_ANIMALS } from '../graphql/queries'\nimport CardList from './cardList'\nimport { useQuery } from '@apollo/client';\nimport Header from './header'\n\nconst AnimalList = () => {\n\n    const [edited, setEdited] = useState(0)\n    const [info, setInfo] = useState([])\n\n    // useEffect(() => {\n    //     setEdited(2)\n    // }, [edited])\n\n    useEffect(() => {\n\n    }, [info, edited])\n\n    function handle(value) {\n        console.log('im clicked')\n        setEdited(5)\n    }\n\n    const { loading, error, data } = useQuery(GET_ANIMALS)\n    if (loading) return 'Loading...'\n    else if (error) return `Error! ${error.message}`\n\n    return (\n        <div>\n            <button onClick={(event) => setEdited(6)} style={{ width: '100%', marginTop: '10px' }}>\n                click me\n            </button>\n            <p>{edited != 0 ? console.log('true') : console.log('false') }</p>\n            <Header callback={handle} />\n            {/* {\n                edited == 0 && <div style={{ display: 'grid', gridTemplateColumns: '1fr', gridGap: '10px' }}>\n                    {\n                        info.Animals.map(item => {\n                            return <CardList id={item.id} name={item.name} food={item.food} type={item.type} characterstic={item.properties.type} legs={item.properties.legs} />\n                        })\n                    }\n                </div>\n            } */}\n        </div>\n    )\n}\n\nexport default AnimalList"]},"metadata":{},"sourceType":"module"}